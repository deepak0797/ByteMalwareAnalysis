

import java.util.HashMap;
import java.util.HashSet;

public class ByteMethodSummary {

    HashMap<Integer, HashSet<String>> argToSink;

    HashMap<Integer, Boolean> argToReturn;

    HashSet<String> srcToReturn;

    public ByteMethodSummary() {
        this.argToSink =new HashMap<Integer, HashSet<String>>();
        this.argToReturn =new HashMap<Integer, Boolean>();
        this.srcToReturn =new HashSet<String>();
    }

    public HashMap<Integer, HashSet<String>> getArgToSink() {
        return this.argToSink;
    }

    public void setArgToSink(HashMap<Integer, HashSet<String>> argToSink) {
        this.argToSink = argToSink;
    }

    public HashMap<Integer, Boolean> getArgToReturn() {
        return this.argToReturn;
    }

    public void setArgToReturn(HashMap<Integer, Boolean> argToReturn) {
        this.argToReturn = argToReturn;
    }

    public HashSet<String> getsrcToReturn() {
        return this.srcToReturn;
    }

    public void setsrcToReturn(HashSet<String> srcToReturn) {
        this.srcToReturn = srcToReturn;
    }

    public static boolean isMethodSummaryEqual(ByteMethodSummary m1,ByteMethodSummary m2) {

        if(m1.getArgToReturn().equals(m2.getArgToReturn())
        && m1.getArgToSink().equals(m2.getArgToSink())
        && m1.getsrcToReturn().equals(m2.getsrcToReturn())) {

            return true;
        }

        return false;
    }
}
