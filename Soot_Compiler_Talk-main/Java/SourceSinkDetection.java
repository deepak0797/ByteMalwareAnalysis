
import java.io.*;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;
import java.util.Arrays;

public class SourceSinkDetection {
    public static Map<String, ArrayList<String>> sources = new HashMap<String, ArrayList<String>>();
    public static Map<String, ArrayList<String>> sinks = new HashMap<String, ArrayList<String>>();

    public SourceSinkDetection() {
        System.out.println("check for source and sink");

    }

    public static boolean isSource(String className, String methodName) {

        ArrayList methods = sources.get(className);

        if (methods == null) {
            return false;
        }

        if (methods.contains(methodName)) {
            return true;
        }
        return false;

    }

    public static boolean isSink(String className, String methodName) {

        ArrayList methods = sinks.get(className);

        if (methods == null) {
            return false;
        }

        if (methods.contains(methodName)) {
            return true;
        }
        return false;

    }

    public static void main(String args[]) {
        extractSources("sources.txt");
        extractSinks("sinks.txt");

    }

    private static Map<String, ArrayList<String>> extractSources(String path) {

        Map<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();
        try {
            FileInputStream fis = new FileInputStream(path);
            InputStreamReader iReader = new InputStreamReader(fis);
            BufferedReader br = new BufferedReader(iReader);
            String line;
            String className = null;

            while ((line = br.readLine()) != null) {
                if (line.startsWith("#")) {
                    /* This means that the line contains class name */
                    className = line.substring(1); /* we can skip the first character and copy the class name */
                }
                if (!sources.containsKey(className)) {
                    sources.put(className, new ArrayList<String>());
                } else {
                    sources.get(className).add(line);
                }

            }
            fis.close();
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }

        return map;

    }

    private static Map<String, ArrayList<String>> extractSinks(String path) {

        Map<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();
        try {
            FileInputStream fis = new FileInputStream(path);
            InputStreamReader iReader = new InputStreamReader(fis);
            BufferedReader br = new BufferedReader(iReader);
            String line;
            String className = null;

            while ((line = br.readLine()) != null) {
                if (line.startsWith("#")) {
                    /* This means that the line contains class name */
                    className = line.substring(1); /* we can skip the first character and copy the class name */
                }

                if (!sinks.containsKey(className)) {
                    sinks.put(className, new ArrayList<String>());
                } else {
                    sinks.get(className).add(line);
                }

            }
            fis.close();
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }

        return map;

    }
}
